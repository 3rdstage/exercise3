package thirdstage.exercise.hibernate6;

import java.time.LocalDateTime;

import org.hibernate.annotations.ColumnDefault;
import org.hibernate.annotations.Comment;
import org.hibernate.annotations.JdbcTypeCode;
import org.hibernate.type.SqlTypes;

import jakarta.persistence.Column;
import jakarta.persistence.Entity;
import jakarta.persistence.ForeignKey;
import jakarta.persistence.Id;
import jakarta.persistence.Index;
import jakarta.persistence.JoinColumn;
import jakarta.persistence.ManyToOne;
import jakarta.persistence.Table;
import jakarta.persistence.Temporal;
import jakarta.persistence.TemporalType;

@Entity
@Table(
  indexes = {
    @Index(name = "subtask_fk1_idx", columnList = "trace_id", unique = false),
    @Index(name = "subtask_idx1", columnList = "tx_hash", unique = false),
    @Index(name = "subtask_idx2", columnList = "started_at", unique = false),
    @Index(name = "subtask_idx3", columnList = "state", unique = false)
})
@Comment("each step in complex task which includes multiple async sub tasks internally")
public class Subtask {

  @Id
  @Comment("autogenerated surrogate key")
  private int id;

  @ManyToOne
  @JoinColumn(name = "trace_id",
    nullable = false,
    foreignKey = @ForeignKey(name = "subtask_fk1"))
  private Task task;


  @Column(length = 66)
  @JdbcTypeCode(SqlTypes.CHAR)
  @Comment("Ethereum transaction hash (in 64 length hexadecimal with 0x prefix) related with subtask if any")
  private String txHash;

  @Column(length = 50)
  private String state;

  @Column
  @ColumnDefault("0")
  @Comment("the number of times the attempts (polling or others) to get the result of the transaction have been made")
  private int receiptTries;
  
  @Column
  @JdbcTypeCode(SqlTypes.LONG32VARCHAR)
  private String failReason;

  @Column(nullable = false, precision = 3)
  @Temporal(TemporalType.TIMESTAMP)
  @ColumnDefault("CURRENT_TIMESTAMP(3)")
  private LocalDateTime startedAt;

  @Column(precision = 3)
  @Temporal(TemporalType.TIMESTAMP)
  private LocalDateTime finishedAt;

}
