- hosts: localhost
  vars:
      generation_dir: "{{ playbook_dir }}/../generated"
      secret : !vault |
          $ANSIBLE_VAULT;1.1;AES256
          31653632326433346137303637346538633035366235343631633966666161643035393539303232
          3634366333633739373735636566363161303865343636370a663263386636356661306538626234
          62616131303735383366366235353434626566383738633738383336306233366433393835666534
          3939623466633536640a303434616165353431643264623366623236363639393037613562386639
          3438
  tasks:
  
    - name: Test nested variable
      debug:
        msg: 
         - Golang package - "{{ common.host.requirement.go.apt.package }}"
         
    - name: Test vault
      vars: 
        obj: {'a': 1, 'b': 2}
      debug:
        msg: 
          - "{{ obj.values()|list }}"
          - "{{ hostvars|list }}"
          - "{{ [obj]|map(attribute='a')|list|to_nice_json }}"
      when: false

    - name: Test vault
      vars: 
        obj: {'a': 1, 'b': 2}
      debug:
        msg: "{{ hostvars['m001'].items() }}"
      when: true


    - name: Test hostvar['all']
      debug:
        msg: tlsservertrust - "{{ hostvars['all'].common.quorum.constellation.tlsservertrust }}"
      ignore_errors: true
        
    - name: Test complex filtering and aggregation
      debug:
        msg:
          - "{{ hostvars.values()|selectattr('quorum', 'defined')|map(attribute='quorum')|selectattr('nodes', 'defined')|map(attribute='nodes')|sum(start=[])|list }}"
          - "{{ hostvars.values()|selectattr('quorum', 'defined')|map(attribute='quorum')|selectattr('nodes', 'defined')|map(attribute='nodes')|sum(start=[])|selectattr('constellation.bootnode')|list }}"

    - name: Test complex filtering and aggregation 2
      vars:
        bootnode_str: >-2
          {%- set bootnodes = hostvars.values()|selectattr('quorum', 'defined')|map(attribute='quorum')|selectattr('nodes', 'defined')|map(attribute='nodes')|sum(start=[])|selectattr('constellation.bootnode')|list %}
          {%- set urls = [] -%}
          {%- for node in bootnodes -%}
            {%- set url = 'http://' ~ node.host ~ ':' ~ node.constellation.port -%}
            {%- do urls.append(url) -%}
          {%- endfor -%}
          
          "{{ urls }}"
      debug:
        msg: "{{ bootnode_str }}"         
 
    - name: Test complex template
      template:
        src: "{{ playbook_dir }}/../templates/tm.conf.j2"
        dest: "{{ generation_dir }}/test/{{ item.constellation.name }}.conf"
        mode: "u=rw,g=r,o=r"
      with_items: "{{ hostvars.values()|selectattr('quorum', 'defined')|map(attribute='quorum')|selectattr('nodes', 'defined')|map(attribute='nodes')|sum(start=[])|list }}"
      #with_items: "{{ hostvars.values()|selectattr('quorum', 'defined')|map(attribute='quorum')|selectattr('nodes', 'defined')|map(attribute='nodes')|first }}"      
      become: false  
          