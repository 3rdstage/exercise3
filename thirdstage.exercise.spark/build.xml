<?xml version="1.0" encoding="UTF-8"?>
<project name="thirdstage.exercise.spark" basedir="."
   default="echo.env"
   xmlns:artifact="antlib:org.apache.maven.artifact.ant"
   xmlns:antelope="antlib:ise.antelope.tasks"
   xmlns:contrib="antlib:net.sf.antcontrib">

   <property environment="env" />

   <!-- Define Maven-Ant tasks -->
   <!-- For more on Maven-Ant taskx`s, refer http://maven.apache.org/ant-tasks/ -->
   <typedef resource="org/apache/maven/artifact/ant/antlib.xml" uri="antlib:org.apache.maven.artifact.ant" classpath="lib/maven-ant-tasks-2.1.3.jar">
   </typedef>

   <artifact:dependencies pathId="ant.tasks.classpath">
      <dependency groupId="ant-contrib" artifactId="ant-contrib" version="1.0b3" />
      <dependency groupId="org.tigris.antelope" artifactId="antelopetasks" version="3.2.10" />
      <dependency groupId="org.testng" artifactId="testng" version="6.8.21" />
      
      <remoteRepository id="centeral2" url="http://repo2.maven.org/maven2/" />
      <remoteRepository id="maven2-repository.dev.java.net" url="http://download.java.net/maven/2/" />
      <remoteRepository id="tmatesoft-releases" url="http://maven.tmatesoft.com/content/repositories/releases/" />
      <remoteRepository id="evolvis-3rdparty" url="http://maven-repo.evolvis.org/3rdparty"/>
   </artifact:dependencies>

   <!-- Define Ant-Contrib tasks -->
   <taskdef resource="net/sf/antcontrib/antlib.xml" uri="antlib:net.sf.antcontrib" classpathref="ant.tasks.classpath" />

   <!-- Define Antelope tasks -->
   <taskdef name="stringutil" classname="ise.antelope.tasks.StringUtilTask" uri="antlib:ise.antelope.tasks" classpathref="ant.tasks.classpath" />
   <taskdef name="if" classname="ise.antelope.tasks.IfTask" uri="antlib:ise.antelope.tasks" classpathref="ant.tasks.classpath" />
   <taskdef name="var" classname="ise.antelope.tasks.Variable" uri="antlib:ise.antelope.tasks" classpathref="ant.tasks.classpath" />
   <taskdef name="unset" classname="ise.antelope.tasks.Unset" uri="antlib:ise.antelope.tasks" classpathref="ant.tasks.classpath" />

   <artifact:pom id="project.pom" file="${basedir}/pom.xml" />
   
   <artifact:dependencies pomRefId="project.pom" pathId="project.classpath" />

   <target name="echo.env" depends="check.env">
      <!-- @todo How to sort the list -->
      <pathconvert pathsep="${line.separator}" refid="project.classpath" property="project.classpath.list">
         <mapper type="regexp" from="(.*\\\.m2\\repository\\)?(.*)" to="  \2" />
      </pathconvert>

      <echo>Defined properties : </echo>
      <echoproperties />
      <echo>
      </echo>
      <echo>Maven properties</echo>
      <echo>   java.version = ${project.pom.properties.java.version}</echo>
      <echo>   spring.version = ${project.pom.properties.spring.version}</echo>
      <echo>   mybatis.version = ${project.pom.properties.mybatis.version}</echo>
      <echo>   akka.version = ${project.pom.properties.akka.version}</echo>
      <echo>   camel.version = ${project.pom.properties.camel.version}</echo>
      <echo>   activemq.version = ${project.pom.properties.activemq.version}</echo>
      <echo>   jetty.version = ${project.pom.properties.jetty.version}</echo>
      <echo>   build.directory = ${project.pom.build.directory}</echo>
      <echo>   build.finalname = ${project.pom.build.finalName}
      </echo>
      <echo>Classpath : </echo>
      <echo>${project.classpath.list}</echo>
   </target>

   <target name="check.env">
      <fail unless="env.SPARK_HOME">Environment variable SPARK_HOME should be specified properly.</fail>
      <!-- <fail unless="env.SPARK_MASTER_PORT">Environment varialbe SPARK_MASTER_PORT should be set explicitly.</fail> -->
   </target>

   <property name="spark.cluster.master.host" value="localhost"/>
   <condition property="spark.cluster.master.port" value="${env.SPARK_MASTER_PORT}" else="7077">
      <isset property="${env.SPARK_MASTER_PORT}"/>
   </condition>

   <condition property="spark.cluster.master.web.port" value="${env.SPARK_MASTER_WEBUI_PORT}" else="8080">
      <isset property="${env.SPARK_MASTER_WEBUI_PORT}"/>
   </condition>
   <condition property="spark.cluster.worker.web.port" value="${env.SPARK_WORKER_WEBUI_PORT}" else="8081">
      <isset property="${env.SPARK_MASTER_PORT}"/>
   </condition>

   <target name="spark.cluster.master.launch">
      <exec executable="cmd" dir="${env.SPARK_HOME}">
         <arg value="/c"/>
         <arg value="bin\spark-class.cmd"/>
         <arg value="org.apache.spark.deploy.master.Master"/>
         <arg value="-h"/>
         <arg value="${spark.cluster.master.host}"/>
         <arg value="-p"/>
         <arg value="${spark.cluster.master.port}"/>
         <arg value="--webui-port"/>
         <arg value="${spark.cluster.master.web.port}"/>
      </exec>
   </target>

   <target name="spark.cluster.worker.launch">
      <exec executable="cmd" dir="${env.SPARK_HOME}">
         <arg value="/c"/>
         <arg value="bin\spark-class.cmd"/>
         <arg value="org.apache.spark.deploy.worker.Worker"/>
         <arg value="--webui-port"/>
         <arg value="${spark.cluster.worker.web.port}"/>
         <arg value="spark://${spark.cluster.master.host}:${spark.cluster.master.port}"/>
      </exec>
   </target>

   <target name="spark.submit.exercise.streaming.simple"
      description="Submit Spark application at thirdstage.exercise.spark.streaming.simple">
      <exec executable="cmd" dir="${env.SPARK_HOME}" failonerror="true">
         <arg value="/c"/>
         <arg value="bin\spark-submit.cmd"/>
         <arg value="--class"/>
         <arg value="thirdstage.exercise.spark.streaming.simple.FirstStreamingApp"/>
         <arg value="--master"/>
         <arg value="local[8]"/>
         <arg value="${project.pom.build.directory}\${project.pom.build.finalName}.jar"/>
      </exec>
   </target>

   <target name="run.exercise.streaming.apache.analyze2"
      description="Submits Spark application at thirdstage.exercise.spark.streaming.apache">

      <antelope:stringutil string="${project.pom.build.directory}" property="project.pom.build.directory.slashed">
         <antelope:replace regex="\\" replacement="/"/>
      </antelope:stringutil>
      <exec executable="cmd" dir="${basedir}" failonerror="true">
         <arg value="/c"/>
         <arg value="${env.SPARK_HOME}\bin\spark-submit.cmd"/>
         <arg value="--class"/>
         <arg value="thirdstage.exercise.spark.streaming.apache.LogTransformApp"/>
         <arg value="--master"/>
         <arg value="local[8]"/>
         <arg value="--deploy-mode"/>
         <arg value="client"/>
         <arg value="--conf"/>
         <arg value="spark.driver.extraJavaOptions=-DworkDir=${project.pom.build.directory.slashed}/apache-sample"/>
         <arg value="target/${project.pom.build.finalName}.jar"/>
      </exec>
   </target>

   <target name="run.exercise.streaming.apache.analyze2.debug"
      description="Submits Spark application with debugger at thirdstage.exercise.spark.streaming.apache">

      <antelope:stringutil string="${project.pom.build.directory}" property="project.pom.build.directory.slashed">
         <antelope:replace regex="\\" replacement="/"/>
      </antelope:stringutil>
      <exec executable="cmd" dir="${basedir}" failonerror="true">
         <arg value="/c"/>
         <arg value="${env.SPARK_HOME}\bin\spark-submit.cmd"/>
         <arg value="--class"/>
         <arg value="thirdstage.exercise.spark.streaming.apache.LogTransformApp"/>
         <arg value="--master"/>
         <arg value="local[8]"/>
         <arg value="--deploy-mode"/>
         <arg value="client"/>
         <arg value="--properties-file"/>
         <arg value="target/classes/thirdstage/exercise/spark/streaming/apache/spark.properties"/>
         <arg value="target/${project.pom.build.finalName}.jar"/>
      </exec>
   </target>

   <target name="run.exercise.streaming.apache.genAccessLogs"
      description="Generates access log to demonstrate thirdstage.exercise.spark.streaming.apache">

      <java fork="true" spawn="false" classname="thirdstage.exercise.spark.streaming.apache.SampleLogGenerator">
         <classpath>
            <pathelement location="${project.pom.build.directory}\classes"/>
            <path refid="project.classpath"/>
         </classpath>
         <jvmarg value="-Xmx512m"/>
         <jvmarg value="-XX:MaxPermSize=512M"/>
         <jvmarg value="-XX:+CMSClassUnloadingEnabled"/>
         <!--
         <jvmarg value="-Xdebug"/>
         <jvmarg value="-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=8003"/>
         -->
         <sysproperty key="workDir" value="${basedir}/target/apache-sample"/>
         <arg value="access_log"/>
      </java>
   </target>

   <target name="run.exercise.streaming.apache.removeAllLogs"
      description="Deletes all generated log files by thirdstage.exercise.spark.streaming.apache">
      <delete>
         <fileset dir="${basedir}/target/apache-sample/logs" includes="*.log"/>
      </delete>
   </target>
</project>